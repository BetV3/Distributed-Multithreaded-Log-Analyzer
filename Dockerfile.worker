# Dockerfile.worker

# First stage: build the worker binary
FROM golang:1.23.4-alpine3.21 AS builder

# Set up working directory
WORKDIR /app

# Copy go.mod and go.sum first to leverage Docker layer caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the source code
COPY . .

# Build the Worker binary
RUN CGO_ENABLED=0 GOOS=linux go build -o worker ./cmd/worker

# Second stage: create a minimal container to run the worker
FROM alpine:3.21

# Set working directory in the container
WORKDIR /app

# Copy the built binary from the builder stage
COPY --from=builder /app/worker .

# Expose the port that the worker listens on (if needed, e.g., 50051)
EXPOSE 50051

# Start the worker application
ENTRYPOINT ["./worker"]
